#include <iostream>

int main()
{
	long long i, j, k, g, n = 0;

	std::cin >> k >> g;
	long long a[100][100];

	for (i = 0; i <= k - 1; i++)
		for (j = 0; j <= g - 1; j++)
		{
			std::cin >> a[i][j];
		}

	if ((k == 1) && (g == 1)) // матрица 1*1
	{
		n = 1;
	}

	if ((k == 1) && (g > 1)) // матрица 1*g
	{
		if (a[0][0] < a[0][1])
		{
			n = n + 1;
		}

		for (j = 1; j < g - 1; j++)
		{
			if ((a[0][j] < a[0][j - 1]) && (a[0][j] < a[0][j + 1]))
			{
				n = n + 1;
			}
		}

		if (a[0][g - 1] < a[0][g - 2])
		{
			n = n + 1;
		}
	}

	if ((k > 1) && (g == 1)) // матрица k*1
	{
		if (a[0][0] < a[1][0])
		{
			n = n + 1;
		}

		for (i = 1; i < k - 1; i++)
		{
			if ((a[i][0] < a[i - 1][0]) && (a[i][0] < a[i + 1][0]))
			{
				n = n + 1;
			}
		}

		if (a[k - 1][0] < a[k - 2][0])
		{
			n = n + 1;
		}
	}

	if ((k > 1) && (g > 1)) // матрица k*g

	{
		for (i = 1; i <= k - 2; i++)
			for (j = 1; j <= g - 2; j++)
			{
				if ((a[i][j] < a[i - 1][j - 1]) && (a[i][j] < a[i - 1][j]) && (a[i][j] < a[i - 1][j + 1]) && (a[i][j] < a[i][j - 1]) && (a[i][j] < a[i][j + 1]) && (a[i][j] < a[i + 1][j - 1]) && (a[i][j] < a[i + 1][j]) && (a[i][j] < a[i + 1][j + 1]))
				{
					n = n + 1;
				}
			}

		//1-ая строка
		if ((a[0][0] < a[1][0]) && (a[0][0] < a[0][1]) && (a[0][0] < a[1][1]))
		{
			n = n + 1;
		}

		for (j = 1; j < g - 1; j++)
		{
			if ((a[0][j] < a[0][j - 1]) && (a[0][j] < a[0][j + 1]) && (a[0][j] < a[1][j - 1]) && (a[0][j] < a[1][j]) && (a[0][j] < a[1][j + 1]))
			{
				n = n + 1;
			}
		}

		if ((a[0][g - 1] < a[0][g - 2]) && (a[0][g - 1] < a[1][g - 1]) && (a[0][g - 1] < a[1][g - 2]))
		{
			n = n + 1;
		}

		//последняя (k-1) строка
		if ((a[k - 1][0] < a[k - 2][0]) && (a[k - 1][0] < a[k - 1][1]) && (a[k - 1][0] < a[k - 2][1]))
		{
			n = n + 1;
		}

		for (j = 1; j < g - 1; j++)
		{
			if ((a[k - 1][j] < a[k - 1][j - 1]) && (a[k - 1][j] < a[k - 1][j + 1]) && (a[k - 1][j] < a[k - 2][j - 1]) && (a[k - 1][j] < a[k - 2][j]) && (a[k - 1][j] < a[k - 2][j + 1]))
			{
				n = n + 1;
			}
		}

		if ((a[k - 1][g - 1] < a[k - 1][g - 2]) && (a[k - 1][g - 1] < a[k - 2][g - 1]) && (a[k - 1][g - 1] < a[k - 2][g - 2]))
		{
			n = n + 1;
		}

		// 1-ый столбец без крайних точек
		for (i = 1; i < k - 1; i++)
		{
			if ((a[i][0] < a[i - 1][0]) && (a[i][0] < a[i + 1][0]) && (a[i][0] < a[i - 1][1]) && (a[i][0] < a[i][1]) && (a[i][0] < a[i + 1][1]))
			{
				n = n + 1;
			}
		}

		// последний (g-1) столбец без крайних точек
		for (i = 1; i < k - 1; i++)
		{
			if ((a[i][g - 1] < a[i - 1][g - 1]) && (a[i][g - 1] < a[i + 1][g - 1]) && (a[i][g - 1] < a[i - 1][g - 2]) && (a[i][g - 1] < a[i][g - 2]) && (a[i][g - 1] < a[i + 1][g - 2]))
			{
				n = n + 1;
			}
		}
	}

	std::cout << n;
	return 0;
}